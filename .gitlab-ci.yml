
# stages:
#     - build

# before_script:
#   - 'C:\Nuget\nuget.exe restore TesteMVC.csproj'

# # job:
# #     stage: build
# #     script: '"C:\Program Files (x86)\MSBuild\15.0\Bin\MSBuild.exe" "TesteMVC.csproj"'


# image : microsoft/dotnet:latest

# stages:
#   - build
#   # - test

# before_script:
#   - 'dotnet restore'

# build:
#  stage: build
# #  variables:
# #     build_path: "$project/src/$project"
#  script:
#   #- "cd $build_path"
#   - 'dotnet build'
#  only:
#    - master

# # test:
# #   stage: test
# #   variables:
# #     test_path: "$project/test/$project.Tests"
# #   script:
# #     - "cd $test_path"
# #     - "dotnet test"



# stages:
#   - build
#   - publish

# .build: &build_template
#   stage: build
#   image: microsoft/dotnet:2.2-sdk-alpine
#   cache:
#     key: "$CI_PROJECT_NAMESPACE-$CI_PROJECT_NAME"
#     paths:
#       - .nuget/
#   script:
#     - dotnet restore -s https://api.nuget.org/v3/index.json --packages ./.nuget/
#     - dotnet publish --no-restore -c Release -o ./docker/publish/

# develop_build:
#   <<: *build_template
#   only:
#     - develop
#   artifacts:
#     expire_in: 1 day
#     paths:
#       - docker/

# .docker: &docker_template
#   stage: publish
#   image: docker:stable-dind
#   script:
#     - mkdir docker/app/
#     - mv docker/publish/$ASSEMBLY_NAME.* docker/app/
#     - mv docker/publish/*.config docker/app/
#     - mv docker/publish/*.json docker/app/
#     - cp Dockerfile docker/
#     - docker build -t $TAG ./docker/
#     - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
#     - docker push $TAG

# develop_docker:
#   <<: *docker_template
#   only:
#     - develop
#   dependencies:
#     - develop_build
#   variables:
#     ASSEMBLY_NAME: app
#     TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_NAME:$CI_PIPELINE_ID





variables:
  # NUGET_PATH: 'C:\Tools\Nuget\nuget.exe'
  # MSBUILD_PATH: 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\msbuild.exe'
  # XUNIT_PATH: packages\xunit.runner.console.2.3.1\tools\net452
  # UNITTEST_FOLDER: '.\tests\TesteMVC.Tests\bin\Release\'

stages:
  - build
  # - test
  - deploy

build_job:
  stage: build
  only:
    # - branches
    - master
  script:
    - 'C:\Tools\Nuget\nuget.exe restore'
    - 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\msbuild.exe /p:Configuration=Release /clp:ErrorsOnly'
    - 'C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\msbuild.exe TesteMVC\TesteMVC.csproj /p:DeployOnBuild=true /p:Configuration=Release /P:PublishProfile=FolderProfile.pubxml'
  # artifacts:
  #   expire_in: 2 days
  #   paths:
  #     - '.\TesteMVC\bin\Release\Publish\'
  #     - '$env:UNITTEST_FOLDER'
  #     - '.\$env:XUNIT_PATH\*.*'

# test_job:
#   stage: test
#   only:
#     - branches
#   script:
#     - '& "$env:XUNIT_PATH\xunit.console.exe" "$env:UNITTEST_FOLDER\CiCdExample.Tests.dll"'
#   dependencies:
#     - build_job

deploy_job:
  stage: deploy
  only:
    # - branches
    - master
  script:
    - 'xcopy /y /s ".\TesteMVC\bin\Release\Publish\*.*" "C:\inetpub\wwwroot\TesteMVC"'
  dependencies:
    - build_job
    # - test_job